name: Docker Publish

on:
  push:
    branches:
      - main
  issue_comment:
    types: [created]

jobs:
  build-and-push:
    # This job will only run for pushes to main or '/build' comments on PRs from authorized users.
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (
        github.event_name == 'issue_comment' &&
        github.event.issue.pull_request &&
        contains(github.event.comment.body, '/build') &&
        (
          github.event.comment.author_association == 'MEMBER' ||
          github.event.comment.author_association == 'OWNER' ||
          github.event.comment.author_association == 'COLLABORATOR'
        )
      )
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # On '/build' comments, checkout the specific PR branch
      - name: Checkout PR branch
        if: github.event_name == 'issue_comment'
        uses: actions/checkout@v4
        with:
          ref: "refs/pull/${{ github.event.issue.number }}/merge"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            # For pushes to main branch
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=sha,enable=${{ github.ref == 'refs/heads/main' }}
            # For PR comments
            type=raw,value=pr-${{ github.event.issue.number }},enable=${{ github.event_name == 'issue_comment' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max 